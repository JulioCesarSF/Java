package br.com.fiap.Excecoes;

@SuppressWarnings("serial")
public class Excecao extends Exception {

	public Excecao(String msg) {
		super(msg);
	}

	public Excecao(Exception e) {
		super(e);
	}

	public Excecao(String msg, boolean stack) {
		super(msg);
		if (stack)
			print();
	}

	public Excecao(String msg, Exception e) {
		super(msg, e);
		System.out.println(tratar(e));
	}

	public Excecao(String msg, Exception e, boolean stack) {
		super(msg, e);

		System.out.println(tratar(e));
		if (stack)
			print();
	}

	private String tratar(Exception e) {
		if (e.getClass().toString().equals("class java.lang.NumberFormatException")) {
			return "Número inválido!";
		} else if (e.getClass().toString().equals("class java.lang.ArithmeticException")) {
			return "Divisão por 0.";
		} else if (e.getClass().toString().equals("class java.lang.ArrayIndexOutOfBoundsException"))
			return "Index maior que o vetor.";
		else
			return "Erro sem tratamento especial.";
	}

	private void print() {
		System.out.println("---- Mensagem ----");
		System.out.println(this.getMessage());
		System.out.println("StackTrace:");
		this.printStackTrace();
		System.out.println("---- Fim Mensagem ----");
	}

}
